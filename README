OCaml ANSI escape-sequences and text formatting - caml-aesq
======================================================================
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version,,
 * with the special exception on linking described in file LICENSE.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

__ What is Aesq? _____________________________________________________
A text formatting library, with support for hypenation and ANSI-codes.

Aesq stands for ANSI escape-sequences. It's a small library that
provides a clean interface (based on the notion of attributes) to
generate ANSI escape-sequences. It also provides 

Aesq was originally written by Kaspar M. Rohrer
(kaspar.rohrer@gmail.com)

Caml-aesq is hosted on Github:
  http://github.com/krohrer/caml-inspect/

__ Installation ______________________________________________________

Unzip or untar in any directory, then run

> make

to generate the library and documentation.

To install the library using findlib, simply type

> make install

And to uninstall it

> make uninstall

For development, you may instead run

> sudo ln -s `pwd` `ocamlfind printconf path`/inspect

__ Examples __________________________________________________________

Run the test by typing

> make test

Of course you will need a device that can interpret ANSI
escape-sequences, otherwise the text will be garbled.

Support for hyphenation is planned.

Requires Extlib
Based on lazy-list stream 